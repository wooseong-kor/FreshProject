<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.min.fresh.IProductDao">

<resultMap type="com.min.fresh.dto.Jaego_DTO" id="JaegoMap">
	<result column="JAEGOCODE" property="jaegocode"/>
	<result column="SANGCODE" property="sangcode"/>
	<result column="JAEGOCNT" property="jaegocnt"/>
	<result column="JAEGOSTAT" property="jaegostat"/>
	<collection property="product_DTO" resultMap="ProductMap"/>
</resultMap>

<resultMap type="com.min.fresh.dto.Product_DTO" id="ProductMap">
	<result column="SANGCODE" property="sangcode"/>
	<result column="SANGNAME" property="sangname"/>
	<result column="PRICE" property="price"/>
	<result column="SANGSTAT" property="sangstat"/>
</resultMap>

	<!-- 상품관리 - 상품 등록 -->
	<insert id="insertProduct" parameterType="Product">
		INSERT INTO PRODUCT (SANGCODE, SANGNAME, PRICE, SANGSTAT)
		VALUES(#{sangcode}||LPAD(PRODUCT_SEQ.NEXTVAL,'4','0'), #{sangname}, #{price}, #{sangstat})
	</insert>
	
	<!-- 상품관리 - 상품 판매가&상태 수정 -->
	<update id="updateProductPriceSangstat" parameterType="Product">
		UPDATE PRODUCT
		SET PRICE = #{price}, SANGSTAT = #{sangstat}
		WHERE SANGCODE = #{sangcode}
	</update>
	
	 	<!-- 상품관리 - 상품상태 자동 품절처리 -->
	<update id="updateProductSoldout">
		UPDATE PRODUCT P 
		SET SANGSTAT = 'S'
		WHERE P.SANGCODE = (SELECT J.SANGCODE SANGCODE
        		          	FROM JAEGO J
                		 	WHERE JAEGOCNT = 0
                 	 		AND P.SANGCODE=J.SANGCODE)
	</update>
	
	 	<!-- 상품관리 - 상품상태 자동 판매중 처리 --> 
	<update id="updateProductSale">
		UPDATE PRODUCT
		SET SANGSTAT = 'Y'
		WHERE PRODUCT.SANGCODE = (SELECT JAEGO.SANGCODE
        		         		 	FROM JAEGO
                		 			WHERE PRODUCT.SANGCODE=JAEGO.SANGCODE
                 	 				AND PRODUCT.SANGSTAT != 'D'
                 	 				AND JAEGOCNT > 0)
	</update>
	
	<!-- 상품관리 - 상품정보 전체조회 -->
	<select id="allProductList" resultType="Product">
		SELECT SANGCODE, SANGNAME, PRICE, SANGSTAT
		FROM PRODUCT
		ORDER BY SANGNAME
	</select>
	
	<!-- 상품관리 - 상품 단종처리(DELFLAG) : 단일 다중 -->
<!-- 	<update id="updateProductDiscontinued" parameterType="Product"> -->
<!-- 		UPDATE PRODUCT -->
<!--  		SET SANGSTAT = 'D' -->
<!--  		WHERE SANGNAME = #{sangname}  -->
<!--  			AND (SANGSTAT = 'Y' OR SANGSTAT = 'S') -->
<!-- 	</update> -->

<!-- 	<update id="updateProductDiscontinued" parameterType="java.util.Map"> -->
<!-- 		UPDATE PRODUCT -->
<!--  		SET SANGSTAT = 'D' -->
<!--  		WHERE SANGNAME IN -->
<!--  		<foreach collection="sangname_" item="sangname" open="(" separator="," close=")"> -->
<!--  			#{sangname} -->
<!--  		</foreach> -->
<!--  				AND (SANGSTAT = 'Y' OR SANGSTAT = 'S') -->
<!-- 	</update> -->
	
	<!-- 상품관리 - 상품+재고 정보 전체 조회 -->
<!-- 	<select id="allProductJaegoList" resultMap="JaegoMap"> -->
<!-- 		SELECT P.SANGCODE SANGCODE, P.SANGNAME SANGNAME, P.PRICE PRICE, P.SANGSTAT SANGSTAT, J.JAEGOCNT JAEGOCNT, J.JAEGOCODE JAEGOCODE, J.JAEGOSTAT JAEGOSTAT -->
<!-- 		FROM PRODUCT P, JAEGO J -->
<!-- 		WHERE P.SANGCODE = J.SANGCODE -->
<!-- 		ORDER BY P.SANGNAME -->
<!-- 	</select> -->
	
	<!-- 상품관리 - 상품명으로 상품정보 검색 -->
<!-- 	<select id="productSearchOne" parameterType="java.lang.String" resultType="Member"> -->
<!-- 		SELECT SANGCODE, SANGNAME, PRICE, SANGSTAT -->
<!-- 		FROM PRODUCT -->
<!-- 		WHERE SANGNAME = #{sangname} -->
<!-- 	</select> -->
	
	<!-- 상품관리 - 상품명으로 상품정보+재고 검색 -->
<!-- 	<select id="productJaegoSearchOne" parameterType="java.lang.String" resultMap="JaegoMap"> -->
<!-- 		SELECT P.SANGCODE SANGCODE, P.SANGNAME SANGNAME, P.PRICE PRICE, J.JAEGOCNT JAEGOCNT, P.SANGSTAT SANGSTAT, J.JAEGOCODE JAEGOCODE -->
<!-- 		FROM PRODUCT P, JAEGO J -->
<!-- 		WHERE P.SANGCODE = J.SANGCODE -->
<!-- 		AND P.SANGNAME = #{sangname} -->
<!-- 	</select>	 -->
	
	<!-- 상품 개수-->
<!-- 	<select id="countAllProduct" resultType="java.lang.Integer"> -->
<!-- 	SELECT COUNT(*) FROM PRODUCT -->
<!-- 	</select> -->
	
	<!-- 상품 페이징-->
<!-- 	<select id="allProductList" parameterType="RowNum" resultType="Product">
	SELECT SANGCODE,SANGNAME,PRICE,SANGSTAT FROM
	(SELECT ROWNUM,SANGCODE,SANGNAME,PRICE,SANGSTAT FROM 
	(SELECT SANGCODE,SANGNAME,PRICE,SANGSTAT FROM PRODUCT ORDER BY SANGNAME))
	WHERE ROWNUM BETWEEN #{first} AND #{last}
	</select> -->
	
</mapper>
